(()=>{"use strict";function e(){const e=document.querySelectorAll([".math",".equation",".formula",'[class*="math"]','[class*="equation"]','[class*="formula"]','script[type="math/tex"]',".MathJax",".katex"].join(","));e.length>0&&(console.log(`Ê£ÄÊµãÂà∞ ${e.length} ‰∏™Êï∞Â≠¶ÂÖÉÁ¥†`),e.forEach((e,t)=>{e.addEventListener("mouseenter",()=>{e.style.outline="2px solid #667eea",e.style.outlineOffset="2px",function(e,t){n();const o=document.createElement("div");o.id="calculus-ai-tooltip",o.textContent=t,o.style.cssText="\n    position: absolute;\n    background: rgba(0, 0, 0, 0.8);\n    color: white;\n    padding: 8px 12px;\n    border-radius: 6px;\n    font-size: 12px;\n    font-family: Arial, sans-serif;\n    z-index: 10001;\n    pointer-events: none;\n    white-space: nowrap;\n  ";const s=e.getBoundingClientRect();o.style.left=s.left+"px",o.style.top=s.top-35+"px",document.body.appendChild(o)}(e,`Êï∞Â≠¶Ë°®ËææÂºè ${t+1}`)}),e.addEventListener("mouseleave",()=>{e.style.outline="",e.style.outlineOffset="",n()})}))}function n(){const e=document.getElementById("calculus-ai-tooltip");e&&e.remove()}function t(e,n="info"){const t=document.createElement("div");t.style.cssText=`\n    position: fixed;\n    top: 20px;\n    right: 20px;\n    z-index: 10002;\n    padding: 12px 20px;\n    border-radius: 8px;\n    font-family: Arial, sans-serif;\n    font-size: 14px;\n    font-weight: 500;\n    box-shadow: 0 4px 20px rgba(0,0,0,0.3);\n    transition: all 0.3s ease;\n    ${"success"===n?"background: #4caf50; color: white;":""}\n    ${"error"===n?"background: #f44336; color: white;":""}\n    ${"info"===n?"background: #2196f3; color: white;":""}\n  `,t.textContent=e,document.body.appendChild(t),setTimeout(()=>{t.style.opacity="0",t.style.transform="translateX(100%)",setTimeout(()=>t.remove(),300)},3e3)}console.log("AIÂæÆÁßØÂàÜÂä©ÊïôContent ScriptÂ∑≤Âä†ËΩΩ"),chrome.runtime.onMessage.addListener((n,t,o)=>{switch(console.log("Content ScriptÊî∂Âà∞Ê∂àÊÅØ:",n),n.type){case"DETECT_MATH":e(),o({success:!0});break;case"HIGHLIGHT_ELEMENT":const t=document.querySelector(n.selector);t?(t.style.outline="3px solid #ff9800",t.style.outlineOffset="2px",setTimeout(()=>{t.style.outline="",t.style.outlineOffset=""},3e3),o({success:!0})):o({success:!1,error:"Element not found"});break;default:o({success:!1,error:"Unknown message type"})}return!0}),function n(){"loading"!==document.readyState?(console.log("ÂàùÂßãÂåñAIÂæÆÁßØÂàÜÂä©ÊïôContent Script"),function(){if(document.getElementById("calculus-ai-floating-btn"))return;const e=document.createElement("div");e.id="calculus-ai-floating-btn",e.innerHTML='\n    <div class="calculus-ai-btn">\n      <span>üìö</span>\n      <span>AIÂä©Êïô</span>\n    </div>\n  ',e.style.cssText="\n    position: fixed;\n    top: 50%;\n    right: 20px;\n    z-index: 10000;\n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n    color: white;\n    border-radius: 25px;\n    padding: 12px 16px;\n    cursor: pointer;\n    box-shadow: 0 4px 20px rgba(0,0,0,0.3);\n    font-family: Arial, sans-serif;\n    font-size: 14px;\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    transition: all 0.3s ease;\n    user-select: none;\n  ",e.addEventListener("mouseenter",()=>{e.style.transform="scale(1.05)",e.style.boxShadow="0 6px 25px rgba(0,0,0,0.4)"}),e.addEventListener("mouseleave",()=>{e.style.transform="scale(1)",e.style.boxShadow="0 4px 20px rgba(0,0,0,0.3)"}),e.addEventListener("click",()=>{chrome.runtime.sendMessage({type:"OPEN_SIDE_PANEL"},e=>{e&&e.success&&console.log("‰æßËæπÊ†èÂ∑≤ÊâìÂºÄ")})}),document.body.appendChild(e)}(),e(),document.addEventListener("dragover",e=>{e.preventDefault(),e.dataTransfer.dropEffect="copy"}),document.addEventListener("drop",e=>{e.preventDefault();const n=Array.from(e.dataTransfer.files).filter(e=>-1!==["application/pdf","text/plain","image/jpeg","image/png"].indexOf(e.type));n.length>0?(t(`Ê£ÄÊµãÂà∞ ${n.length} ‰∏™ÊîØÊåÅÁöÑÊñá‰ª∂`),n.forEach(e=>{chrome.runtime.sendMessage({type:"UPLOAD_FILE",data:{file:e,type:"drop"}},n=>{n&&n.success?t(`${e.name} ‰∏ä‰º†ÊàêÂäü`,"success"):t(`${e.name} ‰∏ä‰º†Â§±Ë¥•`,"error")})})):t("‰∏çÊîØÊåÅÁöÑÊñá‰ª∂Á±ªÂûã","error")}),new MutationObserver(()=>{e()}).observe(document.body,{childList:!0,subtree:!0}),console.log("AIÂæÆÁßØÂàÜÂä©ÊïôContent ScriptÂàùÂßãÂåñÂÆåÊàê")):document.addEventListener("DOMContentLoaded",()=>{setTimeout(n,1e3)})}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ2hyb21l5o+S5Lu2Q29udGVudCBTY3JpcHQgLSDpobXpnaLms6jlhaXohJrmnKxcbmNvbnNvbGUubG9nKCdBSeW+ruenr+WIhuWKqeaVmUNvbnRlbnQgU2NyaXB05bey5Yqg6L29Jyk7XG4vLyDlnKjpobXpnaLkuK3ms6jlhaXmta7liqjmjInpkq5cbmZ1bmN0aW9uIGluamVjdEZsb2F0aW5nQnV0dG9uKCkge1xuICAgIC8vIOajgOafpeaYr+WQpuW3suWtmOWcqOaMiemSrlxuICAgIGlmIChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2FsY3VsdXMtYWktZmxvYXRpbmctYnRuJykpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBmbG9hdGluZ0J0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGZsb2F0aW5nQnRuLmlkID0gJ2NhbGN1bHVzLWFpLWZsb2F0aW5nLWJ0bic7XG4gICAgZmxvYXRpbmdCdG4uaW5uZXJIVE1MID0gYFxuICAgIDxkaXYgY2xhc3M9XCJjYWxjdWx1cy1haS1idG5cIj5cbiAgICAgIDxzcGFuPvCfk5o8L3NwYW4+XG4gICAgICA8c3Bhbj5BSeWKqeaVmTwvc3Bhbj5cbiAgICA8L2Rpdj5cbiAgYDtcbiAgICAvLyDmt7vliqDmoLflvI9cbiAgICBmbG9hdGluZ0J0bi5zdHlsZS5jc3NUZXh0ID0gYFxuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB0b3A6IDUwJTtcbiAgICByaWdodDogMjBweDtcbiAgICB6LWluZGV4OiAxMDAwMDtcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTM1ZGVnLCAjNjY3ZWVhIDAlLCAjNzY0YmEyIDEwMCUpO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBib3JkZXItcmFkaXVzOiAyNXB4O1xuICAgIHBhZGRpbmc6IDEycHggMTZweDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgYm94LXNoYWRvdzogMCA0cHggMjBweCByZ2JhKDAsMCwwLDAuMyk7XG4gICAgZm9udC1mYW1pbHk6IEFyaWFsLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgZ2FwOiA4cHg7XG4gICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgYDtcbiAgICAvLyDmgqzlgZzmlYjmnpxcbiAgICBmbG9hdGluZ0J0bi5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWVudGVyJywgKCkgPT4ge1xuICAgICAgICBmbG9hdGluZ0J0bi5zdHlsZS50cmFuc2Zvcm0gPSAnc2NhbGUoMS4wNSknO1xuICAgICAgICBmbG9hdGluZ0J0bi5zdHlsZS5ib3hTaGFkb3cgPSAnMCA2cHggMjVweCByZ2JhKDAsMCwwLDAuNCknO1xuICAgIH0pO1xuICAgIGZsb2F0aW5nQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbGVhdmUnLCAoKSA9PiB7XG4gICAgICAgIGZsb2F0aW5nQnRuLnN0eWxlLnRyYW5zZm9ybSA9ICdzY2FsZSgxKSc7XG4gICAgICAgIGZsb2F0aW5nQnRuLnN0eWxlLmJveFNoYWRvdyA9ICcwIDRweCAyMHB4IHJnYmEoMCwwLDAsMC4zKSc7XG4gICAgfSk7XG4gICAgLy8g54K55Ye75LqL5Lu2XG4gICAgZmxvYXRpbmdCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgIG9wZW5TaWRlUGFuZWwoKTtcbiAgICB9KTtcbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGZsb2F0aW5nQnRuKTtcbn1cbi8vIOaJk+W8gOS+p+i+ueagj1xuZnVuY3Rpb24gb3BlblNpZGVQYW5lbCgpIHtcbiAgICBjaHJvbWUucnVudGltZS5zZW5kTWVzc2FnZSh7IHR5cGU6ICdPUEVOX1NJREVfUEFORUwnIH0sIChyZXNwb25zZSkgPT4ge1xuICAgICAgICBpZiAocmVzcG9uc2UgJiYgcmVzcG9uc2Uuc3VjY2Vzcykge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ+S+p+i+ueagj+W3suaJk+W8gCcpO1xuICAgICAgICB9XG4gICAgfSk7XG59XG4vLyDmo4DmtYvmlbDlrablhoXlrrlcbmZ1bmN0aW9uIGRldGVjdE1hdGhDb250ZW50KCkge1xuICAgIGNvbnN0IG1hdGhTZWxlY3RvcnMgPSBbXG4gICAgICAgICcubWF0aCcsICcuZXF1YXRpb24nLCAnLmZvcm11bGEnLFxuICAgICAgICAnW2NsYXNzKj1cIm1hdGhcIl0nLCAnW2NsYXNzKj1cImVxdWF0aW9uXCJdJywgJ1tjbGFzcyo9XCJmb3JtdWxhXCJdJyxcbiAgICAgICAgJ3NjcmlwdFt0eXBlPVwibWF0aC90ZXhcIl0nLCAnLk1hdGhKYXgnLCAnLmthdGV4J1xuICAgIF07XG4gICAgY29uc3QgbWF0aEVsZW1lbnRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChtYXRoU2VsZWN0b3JzLmpvaW4oJywnKSk7XG4gICAgaWYgKG1hdGhFbGVtZW50cy5sZW5ndGggPiAwKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGDmo4DmtYvliLAgJHttYXRoRWxlbWVudHMubGVuZ3RofSDkuKrmlbDlrablhYPntKBgKTtcbiAgICAgICAgLy8g5Y+v5Lul5Zyo6L+Z6YeM5re75Yqg5pWw5a2m5YaF5a656auY5Lqu562J5Yqf6IO9XG4gICAgICAgIGhpZ2hsaWdodE1hdGhFbGVtZW50cyhtYXRoRWxlbWVudHMpO1xuICAgIH1cbn1cbi8vIOmrmOS6ruaVsOWtpuWFg+e0oFxuZnVuY3Rpb24gaGlnaGxpZ2h0TWF0aEVsZW1lbnRzKGVsZW1lbnRzKSB7XG4gICAgZWxlbWVudHMuZm9yRWFjaCgoZWxlbWVudCwgaW5kZXgpID0+IHtcbiAgICAgICAgLy8g5re75YqgaG92ZXLmlYjmnpxcbiAgICAgICAgZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWVudGVyJywgKCkgPT4ge1xuICAgICAgICAgICAgZWxlbWVudC5zdHlsZS5vdXRsaW5lID0gJzJweCBzb2xpZCAjNjY3ZWVhJztcbiAgICAgICAgICAgIGVsZW1lbnQuc3R5bGUub3V0bGluZU9mZnNldCA9ICcycHgnO1xuICAgICAgICAgICAgc2hvd01hdGhUb29sdGlwKGVsZW1lbnQsIGDmlbDlrabooajovr7lvI8gJHtpbmRleCArIDF9YCk7XG4gICAgICAgIH0pO1xuICAgICAgICBlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbGVhdmUnLCAoKSA9PiB7XG4gICAgICAgICAgICBlbGVtZW50LnN0eWxlLm91dGxpbmUgPSAnJztcbiAgICAgICAgICAgIGVsZW1lbnQuc3R5bGUub3V0bGluZU9mZnNldCA9ICcnO1xuICAgICAgICAgICAgaGlkZU1hdGhUb29sdGlwKCk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xufVxuLy8g5pi+56S65pWw5a2m5o+Q56S65qGGXG5mdW5jdGlvbiBzaG93TWF0aFRvb2x0aXAoZWxlbWVudCwgdGV4dCkge1xuICAgIC8vIOenu+mZpOW3suWtmOWcqOeahOaPkOekuuahhlxuICAgIGhpZGVNYXRoVG9vbHRpcCgpO1xuICAgIGNvbnN0IHRvb2x0aXAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICB0b29sdGlwLmlkID0gJ2NhbGN1bHVzLWFpLXRvb2x0aXAnO1xuICAgIHRvb2x0aXAudGV4dENvbnRlbnQgPSB0ZXh0O1xuICAgIHRvb2x0aXAuc3R5bGUuY3NzVGV4dCA9IGBcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjgpO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBwYWRkaW5nOiA4cHggMTJweDtcbiAgICBib3JkZXItcmFkaXVzOiA2cHg7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIGZvbnQtZmFtaWx5OiBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgICB6LWluZGV4OiAxMDAwMTtcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBgO1xuICAgIGNvbnN0IHJlY3QgPSBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgIHRvb2x0aXAuc3R5bGUubGVmdCA9IHJlY3QubGVmdCArICdweCc7XG4gICAgdG9vbHRpcC5zdHlsZS50b3AgPSAocmVjdC50b3AgLSAzNSkgKyAncHgnO1xuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodG9vbHRpcCk7XG59XG4vLyDpmpDol4/mlbDlrabmj5DnpLrmoYZcbmZ1bmN0aW9uIGhpZGVNYXRoVG9vbHRpcCgpIHtcbiAgICBjb25zdCB0b29sdGlwID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NhbGN1bHVzLWFpLXRvb2x0aXAnKTtcbiAgICBpZiAodG9vbHRpcCkge1xuICAgICAgICB0b29sdGlwLnJlbW92ZSgpO1xuICAgIH1cbn1cbi8vIOWkhOeQhuaWh+S7tuaLluaLvVxuZnVuY3Rpb24gc2V0dXBGaWxlRHJvcCgpIHtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdkcmFnb3ZlcicsIChlKSA9PiB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgZS5kYXRhVHJhbnNmZXIuZHJvcEVmZmVjdCA9ICdjb3B5JztcbiAgICB9KTtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdkcm9wJywgKGUpID0+IHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBjb25zdCBmaWxlcyA9IEFycmF5LmZyb20oZS5kYXRhVHJhbnNmZXIuZmlsZXMpO1xuICAgICAgICBjb25zdCBzdXBwb3J0ZWRGaWxlcyA9IGZpbGVzLmZpbHRlcihmaWxlID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHR5cGVzID0gWydhcHBsaWNhdGlvbi9wZGYnLCAndGV4dC9wbGFpbicsICdpbWFnZS9qcGVnJywgJ2ltYWdlL3BuZyddO1xuICAgICAgICAgICAgcmV0dXJuIHR5cGVzLmluZGV4T2YoZmlsZS50eXBlKSAhPT0gLTE7XG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoc3VwcG9ydGVkRmlsZXMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgc2hvd0Ryb3BGZWVkYmFjayhg5qOA5rWL5YiwICR7c3VwcG9ydGVkRmlsZXMubGVuZ3RofSDkuKrmlK/mjIHnmoTmlofku7ZgKTtcbiAgICAgICAgICAgIC8vIOWPkemAgeaWh+S7tuWIsGJhY2tncm91bmQgc2NyaXB05aSE55CGXG4gICAgICAgICAgICBoYW5kbGVEcm9wcGVkRmlsZXMoc3VwcG9ydGVkRmlsZXMpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgc2hvd0Ryb3BGZWVkYmFjaygn5LiN5pSv5oyB55qE5paH5Lu257G75Z6LJywgJ2Vycm9yJyk7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbi8vIOWkhOeQhuaLluaLveeahOaWh+S7tlxuZnVuY3Rpb24gaGFuZGxlRHJvcHBlZEZpbGVzKGZpbGVzKSB7XG4gICAgZmlsZXMuZm9yRWFjaChmaWxlID0+IHtcbiAgICAgICAgY2hyb21lLnJ1bnRpbWUuc2VuZE1lc3NhZ2Uoe1xuICAgICAgICAgICAgdHlwZTogJ1VQTE9BRF9GSUxFJyxcbiAgICAgICAgICAgIGRhdGE6IHsgZmlsZSwgdHlwZTogJ2Ryb3AnIH1cbiAgICAgICAgfSwgKHJlc3BvbnNlKSA9PiB7XG4gICAgICAgICAgICBpZiAocmVzcG9uc2UgJiYgcmVzcG9uc2Uuc3VjY2Vzcykge1xuICAgICAgICAgICAgICAgIHNob3dEcm9wRmVlZGJhY2soYCR7ZmlsZS5uYW1lfSDkuIrkvKDmiJDlip9gLCAnc3VjY2VzcycpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgc2hvd0Ryb3BGZWVkYmFjayhgJHtmaWxlLm5hbWV9IOS4iuS8oOWksei0pWAsICdlcnJvcicpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9KTtcbn1cbi8vIOaYvuekuuaLluaLveWPjemmiFxuZnVuY3Rpb24gc2hvd0Ryb3BGZWVkYmFjayhtZXNzYWdlLCB0eXBlID0gJ2luZm8nKSB7XG4gICAgY29uc3QgZmVlZGJhY2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBmZWVkYmFjay5zdHlsZS5jc3NUZXh0ID0gYFxuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB0b3A6IDIwcHg7XG4gICAgcmlnaHQ6IDIwcHg7XG4gICAgei1pbmRleDogMTAwMDI7XG4gICAgcGFkZGluZzogMTJweCAyMHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgICBmb250LWZhbWlseTogQXJpYWwsIHNhbnMtc2VyaWY7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgYm94LXNoYWRvdzogMCA0cHggMjBweCByZ2JhKDAsMCwwLDAuMyk7XG4gICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgICAke3R5cGUgPT09ICdzdWNjZXNzJyA/ICdiYWNrZ3JvdW5kOiAjNGNhZjUwOyBjb2xvcjogd2hpdGU7JyA6ICcnfVxuICAgICR7dHlwZSA9PT0gJ2Vycm9yJyA/ICdiYWNrZ3JvdW5kOiAjZjQ0MzM2OyBjb2xvcjogd2hpdGU7JyA6ICcnfVxuICAgICR7dHlwZSA9PT0gJ2luZm8nID8gJ2JhY2tncm91bmQ6ICMyMTk2ZjM7IGNvbG9yOiB3aGl0ZTsnIDogJyd9XG4gIGA7XG4gICAgZmVlZGJhY2sudGV4dENvbnRlbnQgPSBtZXNzYWdlO1xuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZmVlZGJhY2spO1xuICAgIC8vIDPnp5LlkI7oh6rliqjmtojlpLFcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgZmVlZGJhY2suc3R5bGUub3BhY2l0eSA9ICcwJztcbiAgICAgICAgZmVlZGJhY2suc3R5bGUudHJhbnNmb3JtID0gJ3RyYW5zbGF0ZVgoMTAwJSknO1xuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IGZlZWRiYWNrLnJlbW92ZSgpLCAzMDApO1xuICAgIH0sIDMwMDApO1xufVxuLy8g55uR5ZCs5p2l6IeqYmFja2dyb3VuZOeahOa2iOaBr1xuY2hyb21lLnJ1bnRpbWUub25NZXNzYWdlLmFkZExpc3RlbmVyKChtZXNzYWdlLCBzZW5kZXIsIHNlbmRSZXNwb25zZSkgPT4ge1xuICAgIGNvbnNvbGUubG9nKCdDb250ZW50IFNjcmlwdOaUtuWIsOa2iOaBrzonLCBtZXNzYWdlKTtcbiAgICBzd2l0Y2ggKG1lc3NhZ2UudHlwZSkge1xuICAgICAgICBjYXNlICdERVRFQ1RfTUFUSCc6XG4gICAgICAgICAgICBkZXRlY3RNYXRoQ29udGVudCgpO1xuICAgICAgICAgICAgc2VuZFJlc3BvbnNlKHsgc3VjY2VzczogdHJ1ZSB9KTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdISUdITElHSFRfRUxFTUVOVCc6XG4gICAgICAgICAgICAvLyDpq5jkuq7mjIflrprlhYPntKBcbiAgICAgICAgICAgIGNvbnN0IGVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKG1lc3NhZ2Uuc2VsZWN0b3IpO1xuICAgICAgICAgICAgaWYgKGVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICBlbGVtZW50LnN0eWxlLm91dGxpbmUgPSAnM3B4IHNvbGlkICNmZjk4MDAnO1xuICAgICAgICAgICAgICAgIGVsZW1lbnQuc3R5bGUub3V0bGluZU9mZnNldCA9ICcycHgnO1xuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBlbGVtZW50LnN0eWxlLm91dGxpbmUgPSAnJztcbiAgICAgICAgICAgICAgICAgICAgZWxlbWVudC5zdHlsZS5vdXRsaW5lT2Zmc2V0ID0gJyc7XG4gICAgICAgICAgICAgICAgfSwgMzAwMCk7XG4gICAgICAgICAgICAgICAgc2VuZFJlc3BvbnNlKHsgc3VjY2VzczogdHJ1ZSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHNlbmRSZXNwb25zZSh7IHN1Y2Nlc3M6IGZhbHNlLCBlcnJvcjogJ0VsZW1lbnQgbm90IGZvdW5kJyB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgc2VuZFJlc3BvbnNlKHsgc3VjY2VzczogZmFsc2UsIGVycm9yOiAnVW5rbm93biBtZXNzYWdlIHR5cGUnIH0pO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn0pO1xuLy8g5Yid5aeL5YyWXG5mdW5jdGlvbiBpbml0KCkge1xuICAgIC8vIOetieW+hemhtemdouWujOWFqOWKoOi9vVxuICAgIGlmIChkb2N1bWVudC5yZWFkeVN0YXRlID09PSAnbG9hZGluZycpIHtcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsICgpID0+IHtcbiAgICAgICAgICAgIHNldFRpbWVvdXQoaW5pdCwgMTAwMCk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnNvbGUubG9nKCfliJ3lp4vljJZBSeW+ruenr+WIhuWKqeaVmUNvbnRlbnQgU2NyaXB0Jyk7XG4gICAgLy8g5rOo5YWl5rWu5Yqo5oyJ6ZKuXG4gICAgaW5qZWN0RmxvYXRpbmdCdXR0b24oKTtcbiAgICAvLyDmo4DmtYvmlbDlrablhoXlrrlcbiAgICBkZXRlY3RNYXRoQ29udGVudCgpO1xuICAgIC8vIOiuvue9ruaWh+S7tuaLluaLvVxuICAgIHNldHVwRmlsZURyb3AoKTtcbiAgICAvLyDnm5HlkKzpobXpnaLlj5jljJYgKFNQQeW6lOeUqClcbiAgICBjb25zdCBvYnNlcnZlciA9IG5ldyBNdXRhdGlvbk9ic2VydmVyKCgpID0+IHtcbiAgICAgICAgZGV0ZWN0TWF0aENvbnRlbnQoKTtcbiAgICB9KTtcbiAgICBvYnNlcnZlci5vYnNlcnZlKGRvY3VtZW50LmJvZHksIHtcbiAgICAgICAgY2hpbGRMaXN0OiB0cnVlLFxuICAgICAgICBzdWJ0cmVlOiB0cnVlXG4gICAgfSk7XG4gICAgY29uc29sZS5sb2coJ0FJ5b6u56ev5YiG5Yqp5pWZQ29udGVudCBTY3JpcHTliJ3lp4vljJblrozmiJAnKTtcbn1cbi8vIOWQr+WKqFxuaW5pdCgpO1xuIl0sIm5hbWVzIjpbImRldGVjdE1hdGhDb250ZW50IiwibWF0aEVsZW1lbnRzIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiam9pbiIsImxlbmd0aCIsImNvbnNvbGUiLCJsb2ciLCJmb3JFYWNoIiwiZWxlbWVudCIsImluZGV4IiwiYWRkRXZlbnRMaXN0ZW5lciIsInN0eWxlIiwib3V0bGluZSIsIm91dGxpbmVPZmZzZXQiLCJ0ZXh0IiwiaGlkZU1hdGhUb29sdGlwIiwidG9vbHRpcCIsImNyZWF0ZUVsZW1lbnQiLCJpZCIsInRleHRDb250ZW50IiwiY3NzVGV4dCIsInJlY3QiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJsZWZ0IiwidG9wIiwiYm9keSIsImFwcGVuZENoaWxkIiwic2hvd01hdGhUb29sdGlwIiwiZ2V0RWxlbWVudEJ5SWQiLCJyZW1vdmUiLCJzaG93RHJvcEZlZWRiYWNrIiwibWVzc2FnZSIsInR5cGUiLCJmZWVkYmFjayIsInNldFRpbWVvdXQiLCJvcGFjaXR5IiwidHJhbnNmb3JtIiwiY2hyb21lIiwicnVudGltZSIsIm9uTWVzc2FnZSIsImFkZExpc3RlbmVyIiwic2VuZGVyIiwic2VuZFJlc3BvbnNlIiwic3VjY2VzcyIsInF1ZXJ5U2VsZWN0b3IiLCJzZWxlY3RvciIsImVycm9yIiwiaW5pdCIsInJlYWR5U3RhdGUiLCJmbG9hdGluZ0J0biIsImlubmVySFRNTCIsImJveFNoYWRvdyIsInNlbmRNZXNzYWdlIiwicmVzcG9uc2UiLCJpbmplY3RGbG9hdGluZ0J1dHRvbiIsImUiLCJwcmV2ZW50RGVmYXVsdCIsImRhdGFUcmFuc2ZlciIsImRyb3BFZmZlY3QiLCJzdXBwb3J0ZWRGaWxlcyIsIkFycmF5IiwiZnJvbSIsImZpbGVzIiwiZmlsdGVyIiwiZmlsZSIsImluZGV4T2YiLCJkYXRhIiwibmFtZSIsIk11dGF0aW9uT2JzZXJ2ZXIiLCJvYnNlcnZlIiwiY2hpbGRMaXN0Iiwic3VidHJlZSJdLCJzb3VyY2VSb290IjoiIn0=